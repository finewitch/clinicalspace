{"version":3,"sources":["webpack:///./src/components/BlogRoll.js","webpack:///./src/pages/blog/index.js","webpack:///./src/components/SiteMetadata.js","webpack:///./src/components/Layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["BlogRoll","render","posts","this","props","data","allMarkdownRemark","edges","react_default","a","createElement","className","map","_ref","post","node","key","id","gatsby_browser_entry","to","fields","slug","frontmatter","title","date","excerpt","React","Component","propTypes","PropTypes","shape","array","components_BlogRoll","query","count","BlogRoll_BlogRoll","_3383483938","BlogIndexPage","Layout","style","backgroundImage","boxShadow","backgroundColor","color","padding","useSiteMetadata","_1877296825","site","siteMetadata","TemplateWrapper","children","_useSiteMetadata","description","Helmet_default","lang","name","content","rel","sizes","href","type","property","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Fragment","Consumer","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","pathname"],"mappings":"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","file":"component---src-pages-blog-index-js-ba305c00f276f04a830d.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql, StaticQuery } from 'gatsby'\n\nclass BlogRoll extends React.Component {\n  render() {\n    const { data } = this.props\n    const { edges: posts } = data.allMarkdownRemark\n\n    return (\n      <div className=\"columns is-multiline\">\n        {posts &&\n          posts.map(({ node: post }) => (\n            <div className=\"is-parent column is-6\" key={post.id}>\n              <article className=\"tile is-child box notification\">\n                <p>\n                  <Link\n                    className=\"title has-text-primary is-size-4\"\n                    to={post.fields.slug}\n                  >\n                    {post.frontmatter.title}\n                  </Link>\n                  <span> &bull; </span>\n                  <span className=\"subtitle is-size-5 is-block\">\n                    {post.frontmatter.date}\n                  </span>\n                </p>\n                <p>\n                  {post.excerpt}\n                  <br />\n                  <br />\n                  <Link className=\"button\" to={post.fields.slug}>\n                    Keep Reading â†’\n                  </Link>\n                </p>\n              </article>\n            </div>\n          ))}\n      </div>\n    )\n  }\n}\n\nBlogRoll.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n}\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query BlogRollQuery {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] }\n          filter: { frontmatter: { templateKey: { eq: \"blog-post\" } } }\n        ) {\n          edges {\n            node {\n              excerpt(pruneLength: 400)\n              id\n              fields {\n                slug\n              }\n              frontmatter {\n                title\n                templateKey\n                date(formatString: \"MMMM DD, YYYY\")\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data, count) => <BlogRoll data={data} count={count} />}\n  />\n)\n","import React from 'react'\n\nimport Layout from '../../components/Layout'\nimport BlogRoll from '../../components/BlogRoll'\n\nexport default class BlogIndexPage extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <div\n          className=\"full-width-image-container margin-top-0\"\n          style={{\n            backgroundImage: `url('/img/blog-index.jpg')`,\n          }}\n        >\n          <h1\n            className=\"has-text-weight-bold is-size-1\"\n            style={{\n              boxShadow: '0.5rem 0 0 #f40, -0.5rem 0 0 #f40',\n              backgroundColor: '#f40',\n              color: 'white',\n              padding: '1rem',\n            }}\n          >\n            Latest Stories\n          </h1>\n        </div>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"content\">\n              <BlogRoll />\n            </div>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n","import { graphql, useStaticQuery } from 'gatsby'\n\nconst useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query SITE_METADATA_QUERY {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  )\n  return site.siteMetadata\n}\n\nexport default useSiteMetadata\n","import React from 'react'\nimport Helmet from 'react-helmet'\n// import Footer from '../components/Footer'\n// import Navbar from '../components/Navbar'\nimport './styles.scss'\nimport useSiteMetadata from './SiteMetadata'\n\nconst TemplateWrapper = ({ children }) => {\n  const { title, description } = useSiteMetadata()\n  return (\n    <div>\n      <Helmet>\n        <html lang=\"en\" />\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n\n        <link\n          rel=\"apple-touch-icon\"\n          sizes=\"180x180\"\n          href=\"/img/apple-touch-icon.png\"\n        />\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          href=\"/img/favicon-32x32.png\"\n          sizes=\"32x32\"\n        />\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          href=\"/img/favicon-16x16.png\"\n          sizes=\"16x16\"\n        />\n\n        <link\n          rel=\"mask-icon\"\n          href=\"/img/safari-pinned-tab.svg\"\n          color=\"#ff4400\"\n        />\n\n        <link href=\"https://fonts.googleapis.com/css?family=Josefin+Sans:300,400,600,700&display=swap\" rel=\"stylesheet\"/>\n        <link href=\"https://fonts.googleapis.com/css?family=Martel:400,700&display=swap\" rel=\"stylesheet\"/>\n        <link href=\"https://fonts.googleapis.com/css?family=Alegreya:400,700&display=swap\" rel=\"stylesheet\"/>\n\n        <meta name=\"theme-color\" content=\"#fff\" />\n\n        <meta property=\"og:type\" content=\"business.business\" />\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:url\" content=\"/\" />\n        <meta property=\"og:image\" content=\"/img/og-image.jpg\" />\n      </Helmet>\n      {/* <Navbar /> */}\n      {children}\n      {/* <Footer /> */}\n    </div>\n  )\n}\n\nexport default TemplateWrapper\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}