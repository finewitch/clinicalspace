{"version":3,"sources":["webpack:///./src/pages/contact/index.js","webpack:///./src/components/SiteMetadata.js","webpack:///./src/components/Layout.js"],"names":["Index","props","_this","_React$Component","call","this","handleChange","e","_this$setState","setState","target","name","value","handleSubmit","preventDefault","data","form","fetch","method","headers","Content-Type","body","Object","assign","form-name","getAttribute","state","keys","map","key","encodeURIComponent","join","then","navigate","catch","error","alert","isValidated","render","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_9__","className","action","data-netlify","data-netlify-honeypot","onSubmit","type","hidden","onChange","htmlFor","id","required","React","Component","useSiteMetadata","_1877296825","site","siteMetadata","TemplateWrapper","_ref","children","_useSiteMetadata","title","description","react_default","Helmet_default","lang","content","rel","sizes","href","color","property"],"mappings":"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","file":"component---src-pages-contact-index-js-b0f375093740d35fe486.js","sourcesContent":["import React from 'react'\nimport { navigate } from 'gatsby-link'\nimport Layout from '../../components/Layout'\n\nfunction encode(data) {\n  return Object.keys(data)\n    .map(key => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\n    .join('&')\n}\n\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { isValidated: false }\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const form = e.target\n    fetch('/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: encode({\n        'form-name': form.getAttribute('name'),\n        ...this.state,\n      }),\n    })\n      .then(() => navigate(form.getAttribute('action')))\n      .catch(error => alert(error))\n  }\n\n  render() {\n    return (\n      <Layout>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"content\">\n              <h1>Contact</h1>\n              <form\n                name=\"contact\"\n                method=\"post\"\n                action=\"/contact/thanks/\"\n                data-netlify=\"true\"\n                data-netlify-honeypot=\"bot-field\"\n                onSubmit={this.handleSubmit}\n              >\n                {/* The `form-name` hidden field is required to support form submissions without JavaScript */}\n                <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n                <div hidden>\n                  <label>\n                    Donâ€™t fill this out:{' '}\n                    <input name=\"bot-field\" onChange={this.handleChange} />\n                  </label>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor={'name'}>\n                    Your name\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type={'text'}\n                      name={'name'}\n                      onChange={this.handleChange}\n                      id={'name'}\n                      required={true}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor={'email'}>\n                    Email\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type={'email'}\n                      name={'email'}\n                      onChange={this.handleChange}\n                      id={'email'}\n                      required={true}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor={'message'}>\n                    Message\n                  </label>\n                  <div className=\"control\">\n                    <textarea\n                      className=\"textarea\"\n                      name={'message'}\n                      onChange={this.handleChange}\n                      id={'message'}\n                      required={true}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <button className=\"button is-link\" type=\"submit\">\n                    Send\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n","import { graphql, useStaticQuery } from 'gatsby'\n\nconst useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query SITE_METADATA_QUERY {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  )\n  return site.siteMetadata\n}\n\nexport default useSiteMetadata\n","import React from 'react'\nimport Helmet from 'react-helmet'\n// import Footer from '../components/Footer'\n// import Navbar from '../components/Navbar'\nimport './styles.scss'\nimport useSiteMetadata from './SiteMetadata'\n\nconst TemplateWrapper = ({ children }) => {\n  const { title, description } = useSiteMetadata()\n  return (\n    <div>\n      <Helmet>\n        <html lang=\"en\" />\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n\n        <link\n          rel=\"apple-touch-icon\"\n          sizes=\"180x180\"\n          href=\"/img/apple-touch-icon.png\"\n        />\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          href=\"/img/favicon-32x32.png\"\n          sizes=\"32x32\"\n        />\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          href=\"/img/favicon-16x16.png\"\n          sizes=\"16x16\"\n        />\n\n        <link\n          rel=\"mask-icon\"\n          href=\"/img/safari-pinned-tab.svg\"\n          color=\"#ff4400\"\n        />\n\n        <link href=\"https://fonts.googleapis.com/css?family=Josefin+Sans:300,400,600,700&display=swap\" rel=\"stylesheet\"/>\n        <link href=\"https://fonts.googleapis.com/css?family=Martel:400,700&display=swap\" rel=\"stylesheet\"/>\n        <link href=\"https://fonts.googleapis.com/css?family=Alegreya:400,700&display=swap\" rel=\"stylesheet\"/>\n\n        <meta name=\"theme-color\" content=\"#fff\" />\n\n        <meta property=\"og:type\" content=\"business.business\" />\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:url\" content=\"/\" />\n        <meta property=\"og:image\" content=\"/img/og-image.jpg\" />\n      </Helmet>\n      {/* <Navbar /> */}\n      {children}\n      {/* <Footer /> */}\n    </div>\n  )\n}\n\nexport default TemplateWrapper\n"],"sourceRoot":""}