{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./src/components/SiteMetadata.js","webpack:///./src/components/Layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["TagRoute","render","postLinks","this","props","data","allMarkdownRemark","edges","map","post","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","key","node","fields","slug","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","className","frontmatter","title","tag","pageContext","site","siteMetadata","totalCount","tagHeader","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","style","marginBottom","React","Component","tagPageQuery","useSiteMetadata","_1877296825","TemplateWrapper","_ref","children","_useSiteMetadata","description","react_default","Helmet_default","lang","name","content","rel","sizes","href","type","color","property","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","query","finalData","Fragment","Consumer","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname"],"mappings":"sNAKMA,4FACJC,OAAA,WACE,IACMC,EADQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MACxBC,IAAI,SAAAC,GAAI,OAC9BC,EAAAC,EAAAC,cAAA,MAAIC,IAAKJ,EAAKK,KAAKC,OAAOC,MACxBN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAIT,EAAKK,KAAKC,OAAOC,MACzBN,EAAAC,EAAAC,cAAA,MAAIO,UAAU,aAAaV,EAAKK,KAAKM,YAAYC,WAIjDC,EAAMnB,KAAKC,MAAMmB,YAAYD,IAC7BD,EAAQlB,KAAKC,MAAMC,KAAKmB,KAAKC,aAAaJ,MAC1CK,EAAavB,KAAKC,MAAMC,KAAKC,kBAAkBoB,WAC/CC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEJ,EAFF,IAIf,OACEZ,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAAA,WAASO,UAAU,WACjBT,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CAAQU,MAAUC,EAAL,MAAcD,IAC3BX,EAAAC,EAAAC,cAAA,OAAKO,UAAU,qBACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,WACbT,EAAAC,EAAAC,cAAA,OACEO,UAAU,2BACVW,MAAO,CAAEC,aAAc,SAEvBrB,EAAAC,EAAAC,cAAA,MAAIO,UAAU,iCAAiCQ,GAC/CjB,EAAAC,EAAAC,cAAA,MAAIO,UAAU,WAAWjB,GACzBQ,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,UAAT,6BA9BKc,IAAMC,WAyCdjC,YAER,IAAMkC,EAAY,0bC9BVC,EAhBS,WAatB,OAb4BC,EAAA/B,KACpBmB,KAYIC,cC2CCY,IAnDS,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAAeC,EACTL,IAAvBd,EADgCmB,EAChCnB,MAAOoB,EADyBD,EACzBC,YACf,OACEC,EAAA/B,EAAAC,cAAA,WACE8B,EAAA/B,EAAAC,cAAC+B,EAAAhC,EAAD,KACE+B,EAAA/B,EAAAC,cAAA,QAAMgC,KAAK,OACXF,EAAA/B,EAAAC,cAAA,aAAQS,GACRqB,EAAA/B,EAAAC,cAAA,QAAMiC,KAAK,cAAcC,QAASL,IAElCC,EAAA/B,EAAAC,cAAA,QACEmC,IAAI,mBACJC,MAAM,UACNC,KAAK,8BAEPP,EAAA/B,EAAAC,cAAA,QACEmC,IAAI,OACJG,KAAK,YACLD,KAAK,yBACLD,MAAM,UAERN,EAAA/B,EAAAC,cAAA,QACEmC,IAAI,OACJG,KAAK,YACLD,KAAK,yBACLD,MAAM,UAGRN,EAAA/B,EAAAC,cAAA,QACEmC,IAAI,YACJE,KAAK,6BACLE,MAAM,YAGRT,EAAA/B,EAAAC,cAAA,QAAMqC,KAAK,oFAAoFF,IAAI,eACnGL,EAAA/B,EAAAC,cAAA,QAAMqC,KAAK,sEAAsEF,IAAI,eACrFL,EAAA/B,EAAAC,cAAA,QAAMqC,KAAK,wEAAwEF,IAAI,eAEvFL,EAAA/B,EAAAC,cAAA,QAAMiC,KAAK,cAAcC,QAAQ,SAEjCJ,EAAA/B,EAAAC,cAAA,QAAMwC,SAAS,UAAUN,QAAQ,sBACjCJ,EAAA/B,EAAAC,cAAA,QAAMwC,SAAS,WAAWN,QAASzB,IACnCqB,EAAA/B,EAAAC,cAAA,QAAMwC,SAAS,SAASN,QAAQ,MAChCJ,EAAA/B,EAAAC,cAAA,QAAMwC,SAAS,WAAWN,QAAQ,uBAGnCP,yBCpDP,IAAsBc,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/CK,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAAzD,IAAA+C,EAAA,SAaMW,EAAqBrC,IAAMsC,cAAc,IAE/C,SAASC,EAATjC,GAA2E,IAAxCkC,EAAwClC,EAAxCkC,gBAAiBnE,EAAuBiC,EAAvBjC,KAAMoE,EAAiBnC,EAAjBmC,MAAOxE,EAAUqC,EAAVrC,OACzDyE,EAAYrE,EACdA,EAAKA,KACLmE,EAAgBC,IAAUD,EAAgBC,GAAOpE,KAErD,OACE0D,EAAApD,EAAAC,cAACmD,EAAApD,EAAMgE,SAAP,KACGD,GAAazE,EAAOyE,IACnBA,GAAaX,EAAApD,EAAAC,cAAA,qCAKrB,IAAMiD,EAAc,SAAAzD,GAAS,IACnBC,EAAkCD,EAAlCC,KAAMoE,EAA4BrE,EAA5BqE,MAAOxE,EAAqBG,EAArBH,OAAQsC,EAAanC,EAAbmC,SAE7B,OACEwB,EAAApD,EAAAC,cAACyD,EAAmBO,SAApB,KACG,SAAAJ,GAAe,OACdT,EAAApD,EAAAC,cAAC2D,EAAD,CACElE,KAAMA,EACNoE,MAAOA,EACPxE,OAAQA,GAAUsC,EAClBiC,gBAAiBA,OA6B3BX,EAAYgB,UAAY,CACtBxE,KAAMyE,IAAUC,OAChBN,MAAOK,IAAUE,OAAOC,WACxBhF,OAAQ6E,IAAUI,KAClB3C,SAAUuC,IAAUI,iGClEhBC,EAAmB,SAAA7C,GAAiC,IAA9B8C,EAA8B9C,EAA9B8C,SAAUC,EAAoB/C,EAApB+C,cACpC,OAAKA,EAGErD,IAAMpB,cAAc0E,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,MASXN,EAAiBN,UAAY,CAC3BO,SAAUN,IAAUY,MAAM,CACxBC,SAAUb,IAAUE,OAAOC,aAC1BA,YAGUE","file":"component---src-templates-tags-js-def7eae501dc874cb111.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/Layout'\n\nclass TagRoute extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges\n    const postLinks = posts.map(post => (\n      <li key={post.node.fields.slug}>\n        <Link to={post.node.fields.slug}>\n          <h2 className=\"is-size-2\">{post.node.frontmatter.title}</h2>\n        </Link>\n      </li>\n    ))\n    const tag = this.props.pageContext.tag\n    const title = this.props.data.site.siteMetadata.title\n    const totalCount = this.props.data.allMarkdownRemark.totalCount\n    const tagHeader = `${totalCount} post${\n      totalCount === 1 ? '' : 's'\n    } tagged with “${tag}”`\n\n    return (\n      <Layout>\n        <section className=\"section\">\n          <Helmet title={`${tag} | ${title}`} />\n          <div className=\"container content\">\n            <div className=\"columns\">\n              <div\n                className=\"column is-10 is-offset-1\"\n                style={{ marginBottom: '6rem' }}\n              >\n                <h3 className=\"title is-size-4 is-bold-light\">{tagHeader}</h3>\n                <ul className=\"taglist\">{postLinks}</ul>\n                <p>\n                  <Link to=\"/tags/\">Browse all tags</Link>\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nexport default TagRoute\n\nexport const tagPageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import { graphql, useStaticQuery } from 'gatsby'\n\nconst useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query SITE_METADATA_QUERY {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  )\n  return site.siteMetadata\n}\n\nexport default useSiteMetadata\n","import React from 'react'\nimport Helmet from 'react-helmet'\n// import Footer from '../components/Footer'\n// import Navbar from '../components/Navbar'\nimport './styles.scss'\nimport useSiteMetadata from './SiteMetadata'\n\nconst TemplateWrapper = ({ children }) => {\n  const { title, description } = useSiteMetadata()\n  return (\n    <div>\n      <Helmet>\n        <html lang=\"en\" />\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n\n        <link\n          rel=\"apple-touch-icon\"\n          sizes=\"180x180\"\n          href=\"/img/apple-touch-icon.png\"\n        />\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          href=\"/img/favicon-32x32.png\"\n          sizes=\"32x32\"\n        />\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          href=\"/img/favicon-16x16.png\"\n          sizes=\"16x16\"\n        />\n\n        <link\n          rel=\"mask-icon\"\n          href=\"/img/safari-pinned-tab.svg\"\n          color=\"#ff4400\"\n        />\n\n        <link href=\"https://fonts.googleapis.com/css?family=Josefin+Sans:300,400,600,700&display=swap\" rel=\"stylesheet\"/>\n        <link href=\"https://fonts.googleapis.com/css?family=Martel:400,700&display=swap\" rel=\"stylesheet\"/>\n        <link href=\"https://fonts.googleapis.com/css?family=Alegreya:400,700&display=swap\" rel=\"stylesheet\"/>\n\n        <meta name=\"theme-color\" content=\"#fff\" />\n\n        <meta property=\"og:type\" content=\"business.business\" />\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:url\" content=\"/\" />\n        <meta property=\"og:image\" content=\"/img/og-image.jpg\" />\n      </Helmet>\n      {/* <Navbar /> */}\n      {children}\n      {/* <Footer /> */}\n    </div>\n  )\n}\n\nexport default TemplateWrapper\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}