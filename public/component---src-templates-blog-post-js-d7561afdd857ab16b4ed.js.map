{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/SiteMetadata.js","webpack:///./src/components/Layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Content.js"],"names":["__webpack_require__","r","__webpack_exports__","d","BlogPostTemplate","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","lodash__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","_components_Content__WEBPACK_IMPORTED_MODULE_6__","_ref","content","contentComponent","description","tags","title","helmet","PostContent","Content","a","createElement","className","length","style","marginTop","map","tag","key","to","kebabCase","propTypes","PropTypes","node","isRequired","func","string","object","BlogPost","_ref2","post","data","markdownRemark","html","HTMLContent","frontmatter","titleTemplate","name","shape","useSiteMetadata","_1877296825","site","siteMetadata","TemplateWrapper","children","_useSiteMetadata","react_default","Helmet_default","lang","rel","sizes","href","type","color","property","m","module","exports","require","default","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","Fragment","props","Consumer","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","pathname","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"component---src-templates-blog-post-js-d7561afdd857ab16b4ed.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { kebabCase } from 'lodash'\nimport Helmet from 'react-helmet'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Content, { HTMLContent } from '../components/Content'\n\nexport const BlogPostTemplate = ({\n  content,\n  contentComponent,\n  description,\n  tags,\n  title,\n  helmet,\n}) => {\n  const PostContent = contentComponent || Content\n\n  return (\n    <section className=\"section\">\n      {helmet || ''}\n      <div className=\"container content\">\n        <div className=\"columns\">\n          <div className=\"column is-10 is-offset-1\">\n            <h1 className=\"title is-size-2 has-text-weight-bold is-bold-light\">\n              {title}\n            </h1>\n            <p>{description}</p>\n            <PostContent content={content} />\n            {tags && tags.length ? (\n              <div style={{ marginTop: `4rem` }}>\n                <h4>Tags</h4>\n                <ul className=\"taglist\">\n                  {tags.map(tag => (\n                    <li key={tag + `tag`}>\n                      <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nBlogPostTemplate.propTypes = {\n  content: PropTypes.node.isRequired,\n  contentComponent: PropTypes.func,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  helmet: PropTypes.object,\n}\n\nconst BlogPost = ({ data }) => {\n  const { markdownRemark: post } = data\n\n  return (\n    <Layout>\n      <BlogPostTemplate\n        content={post.html}\n        contentComponent={HTMLContent}\n        description={post.frontmatter.description}\n        helmet={\n          <Helmet titleTemplate=\"%s | Blog\">\n            <title>{`${post.frontmatter.title}`}</title>\n            <meta\n              name=\"description\"\n              content={`${post.frontmatter.description}`}\n            />\n          </Helmet>\n        }\n        tags={post.frontmatter.tags}\n        title={post.frontmatter.title}\n      />\n    </Layout>\n  )\n}\n\nBlogPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object,\n  }),\n}\n\nexport default BlogPost\n\nexport const pageQuery = graphql`\n  query BlogPostByID($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        description\n        tags\n      }\n    }\n  }\n`\n","import { graphql, useStaticQuery } from 'gatsby'\n\nconst useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query SITE_METADATA_QUERY {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  )\n  return site.siteMetadata\n}\n\nexport default useSiteMetadata\n","import React from 'react'\nimport Helmet from 'react-helmet'\n// import Footer from '../components/Footer'\n// import Navbar from '../components/Navbar'\nimport './styles.scss'\nimport useSiteMetadata from './SiteMetadata'\n\nconst TemplateWrapper = ({ children }) => {\n  const { title, description } = useSiteMetadata()\n  return (\n    <div>\n      <Helmet>\n        <html lang=\"en\" />\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n\n        <link\n          rel=\"apple-touch-icon\"\n          sizes=\"180x180\"\n          href=\"/img/apple-touch-icon.png\"\n        />\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          href=\"/img/favicon-32x32.png\"\n          sizes=\"32x32\"\n        />\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          href=\"/img/favicon-16x16.png\"\n          sizes=\"16x16\"\n        />\n\n        <link\n          rel=\"mask-icon\"\n          href=\"/img/safari-pinned-tab.svg\"\n          color=\"#ff4400\"\n        />\n\n        <link href=\"https://fonts.googleapis.com/css?family=Josefin+Sans:300,400,600,700&display=swap\" rel=\"stylesheet\"/>\n        <link href=\"https://fonts.googleapis.com/css?family=Martel:400,700&display=swap\" rel=\"stylesheet\"/>\n        <link href=\"https://fonts.googleapis.com/css?family=Alegreya:400,700&display=swap\" rel=\"stylesheet\"/>\n\n        <meta name=\"theme-color\" content=\"#fff\" />\n\n        <meta property=\"og:type\" content=\"business.business\" />\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:url\" content=\"/\" />\n        <meta property=\"og:image\" content=\"/img/og-image.jpg\" />\n      </Helmet>\n      {/* <Navbar /> */}\n      {children}\n      {/* <Footer /> */}\n    </div>\n  )\n}\n\nexport default TemplateWrapper\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const HTMLContent = ({ content, className }) => (\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\n)\n\nconst Content = ({ content, className }) => (\n  <div className={className}>{content}</div>\n)\n\nContent.propTypes = {\n  content: PropTypes.node,\n  className: PropTypes.string,\n}\n\nHTMLContent.propTypes = Content.propTypes\n\nexport default Content\n"],"sourceRoot":""}